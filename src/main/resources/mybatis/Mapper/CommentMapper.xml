<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.graduationdesign.mappers.CommentMapper">
  <resultMap id="BaseResultMap" type="org.graduationdesign.entity.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="descript_score" jdbcType="INTEGER" property="descriptScore" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_anonymous" jdbcType="TINYINT" property="isAnonymous" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="chat_score" jdbcType="INTEGER" property="chatScore" />
    <result column="hyginene_score" jdbcType="INTEGER" property="hygineneScore" />
    <result column="location_score" jdbcType="INTEGER" property="locationScore" />
    <result column="cost_score" jdbcType="INTEGER" property="costScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, descript_score, content, is_anonymous, is_delete, chat_score, hyginene_score, 
    location_score, cost_score
  </sql>
  <select id="selectByExample" parameterType="org.graduationdesign.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `comment`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `comment`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `comment`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.graduationdesign.entity.CommentExample">
    delete from `comment`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.graduationdesign.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `comment` (order_id, descript_score, content, 
      is_anonymous, is_delete, chat_score, 
      hyginene_score, location_score, cost_score
      )
    values (#{orderId,jdbcType=BIGINT}, #{descriptScore,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{isAnonymous,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}, #{chatScore,jdbcType=INTEGER}, 
      #{hygineneScore,jdbcType=INTEGER}, #{locationScore,jdbcType=INTEGER}, #{costScore,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.graduationdesign.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `comment`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="descriptScore != null">
        descript_score,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isAnonymous != null">
        is_anonymous,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="chatScore != null">
        chat_score,
      </if>
      <if test="hygineneScore != null">
        hyginene_score,
      </if>
      <if test="locationScore != null">
        location_score,
      </if>
      <if test="costScore != null">
        cost_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="descriptScore != null">
        #{descriptScore,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymous != null">
        #{isAnonymous,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="chatScore != null">
        #{chatScore,jdbcType=INTEGER},
      </if>
      <if test="hygineneScore != null">
        #{hygineneScore,jdbcType=INTEGER},
      </if>
      <if test="locationScore != null">
        #{locationScore,jdbcType=INTEGER},
      </if>
      <if test="costScore != null">
        #{costScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.graduationdesign.entity.CommentExample" resultType="java.lang.Integer">
    select count(*) from `comment`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `comment`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.descriptScore != null">
        descript_score = #{record.descriptScore,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.isAnonymous != null">
        is_anonymous = #{record.isAnonymous,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.chatScore != null">
        chat_score = #{record.chatScore,jdbcType=INTEGER},
      </if>
      <if test="record.hygineneScore != null">
        hyginene_score = #{record.hygineneScore,jdbcType=INTEGER},
      </if>
      <if test="record.locationScore != null">
        location_score = #{record.locationScore,jdbcType=INTEGER},
      </if>
      <if test="record.costScore != null">
        cost_score = #{record.costScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `comment`
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      descript_score = #{record.descriptScore,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      is_anonymous = #{record.isAnonymous,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      chat_score = #{record.chatScore,jdbcType=INTEGER},
      hyginene_score = #{record.hygineneScore,jdbcType=INTEGER},
      location_score = #{record.locationScore,jdbcType=INTEGER},
      cost_score = #{record.costScore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.graduationdesign.entity.Comment">
    update `comment`
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="descriptScore != null">
        descript_score = #{descriptScore,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymous != null">
        is_anonymous = #{isAnonymous,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="chatScore != null">
        chat_score = #{chatScore,jdbcType=INTEGER},
      </if>
      <if test="hygineneScore != null">
        hyginene_score = #{hygineneScore,jdbcType=INTEGER},
      </if>
      <if test="locationScore != null">
        location_score = #{locationScore,jdbcType=INTEGER},
      </if>
      <if test="costScore != null">
        cost_score = #{costScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.graduationdesign.entity.Comment">
    update `comment`
    set order_id = #{orderId,jdbcType=BIGINT},
      descript_score = #{descriptScore,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      is_anonymous = #{isAnonymous,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      chat_score = #{chatScore,jdbcType=INTEGER},
      hyginene_score = #{hygineneScore,jdbcType=INTEGER},
      location_score = #{locationScore,jdbcType=INTEGER},
      cost_score = #{costScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>