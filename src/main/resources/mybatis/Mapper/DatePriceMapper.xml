<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.graduationdesign.mappers.DatePriceMapper">
  <resultMap id="BaseResultMap" type="org.graduationdesign.entity.DatePrice">
    <id column="room_id" jdbcType="BIGINT" property="roomId" />
    <id column="date" jdbcType="DATE" property="date" />
    <result column="price" jdbcType="REAL" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    room_id, date, price
  </sql>
  <select id="selectByExample" parameterType="org.graduationdesign.entity.DatePriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `date_price`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="org.graduationdesign.entity.DatePriceKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `date_price`
    where room_id = #{roomId,jdbcType=BIGINT}
      and date = #{date,jdbcType=DATE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="org.graduationdesign.entity.DatePriceKey">
    delete from `date_price`
    where room_id = #{roomId,jdbcType=BIGINT}
      and date = #{date,jdbcType=DATE}
  </delete>
  <delete id="deleteByExample" parameterType="org.graduationdesign.entity.DatePriceExample">
    delete from `date_price`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.graduationdesign.entity.DatePrice">
    insert into `date_price` (room_id, date, price)
    values (#{roomId,jdbcType=BIGINT}, #{date,jdbcType=DATE}, #{price,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="org.graduationdesign.entity.DatePrice">
    insert into `date_price`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        room_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.graduationdesign.entity.DatePriceExample" resultType="java.lang.Integer">
    select count(*) from `date_price`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `date_price`
    <set>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=BIGINT},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `date_price`
    set room_id = #{record.roomId,jdbcType=BIGINT},
      date = #{record.date,jdbcType=DATE},
      price = #{record.price,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.graduationdesign.entity.DatePrice">
    update `date_price`
    <set>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=BIGINT}
      and date = #{date,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.graduationdesign.entity.DatePrice">
    update `date_price`
    set price = #{price,jdbcType=REAL}
    where room_id = #{roomId,jdbcType=BIGINT}
      and date = #{date,jdbcType=DATE}
  </update>
</mapper>